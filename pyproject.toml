[tool.black]
line-length = 110
target-version = ["py39"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = false
use_parentheses = true
line_length = 110

[tool.mypy]
python_version = 3.9
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict = true

[tool.poetry]
name = "c2cciutils"
version = "0.0.0"
description = "Common utilities for Camptocamp CI"
readme = "README.md"
authors = ["Camptocamp <info@camptocamp.com>"]
keywords = ["ci"]
repository = "https://github.com/camptocamp/c2cciutils"
license = "FreeBSD"
packages = [{ include = "c2cciutils" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Typing :: Typed",
]
include = [
    "c2cciutils/py.typed",
    "c2cciutils/*.graphql",
    "c2cciutils/*.yaml",
    "c2cciutils/*.json",
]
exclude = ["c2cciutils/node_modules/**/test"]

[tool.poetry.scripts]
c2cciutils = "c2cciutils.scripts.main:main"
c2cciutils-env = "c2cciutils.scripts.env:main"
c2cciutils-checks = "c2cciutils.scripts.env:main"
c2cciutils-pull-request-checks = "c2cciutils.scripts.pr_checks:main"
c2cciutils-audit = "c2cciutils.scripts.audit:main"
c2cciutils-publish = "c2cciutils.scripts.publish:main"
c2cciutils-version = "c2cciutils.scripts.version:main"
c2cciutils-clean = "c2cciutils.scripts.clean:main"
c2cciutils-google-calendar = "c2cciutils.publish:main_calendar"
c2cciutils-k8s-install = "c2cciutils.scripts.k8s.install:main"
c2cciutils-k8s-db = "c2cciutils.scripts.k8s.db:main"
c2cciutils-k8s-wait = "c2cciutils.scripts.k8s.wait:main"
c2cciutils-k8s-logs = "c2cciutils.scripts.k8s.logs:main"
c2cciutils-pin-pipenv = "c2cciutils.scripts.pin_pipenv:main"
c2cciutils-docker-logs = "c2cciutils.scripts.docker_logs:main"
c2cciutils-trigger-image-update = "c2cciutils.scripts.trigger_image_update:main"
c2cciutils-download-applications = "c2cciutils.scripts.download_applications:main"
c2cciutils-docker-versions-gen = "c2cciutils.scripts.docker_versions_gen:main"
c2cciutils-docker-versions-update = "c2cciutils.scripts.docker_versions_update:main"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
markdown-table = "2020.12.3"
python-magic = "0.4.27"
requests = "2.31.0"
Markdown = "3.5.1"
google-api-python-client = { version = "2.111.0", optional = true }
google-auth-httplib2 = { version = "0.2.0", optional = true }
google-auth-oauthlib = { version = "1.2.0", optional = true }
"ruamel.yaml" = "0.18.5"
defusedxml = "0.7.1"
twine = { version = "4.0.2", optional = true }
codespell = { version = "2.2.6", optional = true }
toml = "0.10.2"
debian-inspector = "31.0.0"
PyYAML = "6.0.1"
tomlkit = { version = "0.12.3", optional = true }
multi-repo-automation = { version="1.0.0", optional = true }

[tool.poetry.extras]
audit = []
checks = []
publish = ["twine", "google-api-python-client", "google-auth-httplib2", "google-auth-oauthlib", "tomlkit"]
publish_plugins = []
pr_checks = ["codespell"]
version = ["multi-repo-automation"]

[tool.poetry.group.dev.dependencies]
# pylint = "2.15.6"
prospector = { version = "1.10.3", extras = ["with_bandit", "with_mypy", "with_pyroma"] }
types-requests = "2.31.0.20231231"
types-pyyaml = "6.0.12.12"
types-setuptools = "69.0.0.0"
types-markdown = "3.5.0.3"
types-toml = "0.10.8.7"
typing-extensions = "4.9.0"
prospector-profile-duplicated = "0.5.1"

[build-system]
requires = [
    "poetry-core>=1.0.0",
    "poetry-dynamic-versioning[plugin]>=0.19.0",
    "poetry-plugin-tweak-dependencies-version",
    "poetry-dynamic-versioning",
    # "poetry-plugin-drop-python-upper-constraint",
]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "version_branch" -%}
{{serialize_pep440(bump_version(base, 1 if env.get("IS_MASTER") == "TRUE" else 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "major"
black = "full"
isort = "full"
codespell = "full"
