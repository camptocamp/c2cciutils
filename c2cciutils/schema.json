{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/camptocamp/tilecloud-chain/master/tilecloud_chain/schema.json",
  "type": "object",
  "title": "configuration",
  "description": "C2C CI utils configuration file",
  "additionalProperties": false,
  "definitions": {
    "audit_outdated_versions": {
      "title": "Audit outdated versions",
      "description": "Audit of outdated version",
      "type": "boolean"
    },
    "audit_snyk": {
      "title": "Audit with snyk",
      "description": "The audit snyk configuration",
      "oneOf": [
        {
          "title": "Audit snyk config",
          "description": "The audit Pipfile configuration",
          "type": "object",
          "properties": {
            "test_arguments": {
              "description": "The snyk test arguments",
              "title": "audit snyk test arguments",
              "default": ["--all-projects", "--fail-on=all", "--severity-threshold=medium"],
              "type": "array",
              "items": { "type": "string" }
            },
            "monitor_arguments": {
              "description": "The snyk monitor arguments",
              "title": "audit snyk monitor arguments",
              "default": ["--all-projects"],
              "type": "array",
              "items": { "type": "string" }
            },
            "fix_arguments": {
              "description": "The snyk fix arguments",
              "title": "audit snyk fix arguments",
              "default": ["--all-projects"],
              "type": "array",
              "items": { "type": "string" }
            },
            "fix_github_create_pull_request_arguments": {
              "description": "The snyk fix pull request extra arguments",
              "title": "audit snyk fix pull request arguments",
              "default": ["--fill", "--label=dependencies"],
              "type": "array",
              "items": { "type": "string" }
            },
            "pip_install_arguments": {
              "description": "The snyk pip install arguments",
              "title": "audit snyk pip install arguments",
              "default": ["--user"],
              "type": "array",
              "items": { "type": "string" }
            },
            "pipenv_sync_arguments": {
              "description": "The snyk pipenv sync arguments",
              "title": "audit snyk pipenv sync arguments",
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            },
            "files_no_install": {
              "description": "The list of files to not install",
              "title": "audit snyk files no install",
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          }
        },
        { "type": "boolean" }
      ]
    },
    "codespell": {
      "title": "Codespell",
      "description": "The codespell check configuration",
      "type": "object",
      "properties": {
        "internal_dictionaries": {
          "title": "codespell dictionaries",
          "description": "List of argument that will be added to the codespell command",
          "default": ["clear", "rare", "informal", "code", "names", "en-GB_to_en-US"],
          "type": "array",
          "items": { "type": "string" }
        },
        "arguments": {
          "title": "codespell arguments",
          "description": "List of argument that will be added to the codespell command",
          "default": ["--quiet-level=2", "--check-filenames", "--ignore-words-list=ro"],
          "type": "array",
          "items": { "type": "string" }
        },
        "ignore_re": {
          "title": "codespell ignore regular expression",
          "description": "List of regular expression that should be ignored",
          "default": ["(.*/)?poetry\\.lock", "(.*/)?package-lock\\.json"],
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "pr_checks_commits_messages": {
      "title": "pull request checks commits messages",
      "description": "Check the pull request commits messages",
      "oneOf": [
        {
          "title": "pull request checks commits messages configuration",
          "description": "The commit message check configuration",
          "type": "object",
          "properties": {
            "check_fixup": {
              "title": "pull request checks commits messages fixup",
              "description": "Check that we don't have one fixup commit in the pull request",
              "default": true,
              "type": "boolean"
            },
            "check_squash": {
              "title": "pull request checks commits messages squash",
              "description": "Check that we don't have one squash commit in the pull request",
              "default": true,
              "type": "boolean"
            },
            "check_first_capital": {
              "title": "pull request checks commits messages first capital",
              "description": "Check that the all the commits message starts with a capital letter",
              "default": true,
              "type": "boolean"
            },
            "min_head_length": {
              "title": "pull request checks commits messages min head length",
              "description": "Check that the commits message head is at least this long, use 0 to disable",
              "default": 5,
              "type": "integer"
            },
            "check_no_merge_commits": {
              "title": "pull request checks commits messages no merge commits",
              "description": "Check that we don't have merge commits in the pull request",
              "default": true,
              "type": "boolean"
            },
            "check_no_own_revert": {
              "title": "pull request checks commits messages no own revert",
              "description": "Check that we don't have reverted one of our commits in the pull request",
              "default": true,
              "type": "boolean"
            }
          }
        },
        { "type": "boolean" }
      ]
    },
    "pr_checks_commits_spell": {
      "title": "pull request checks commits spelling",
      "oneOf": [
        {
          "title": "pull request checks commits spelling configuration",
          "description": "Configuration used to check the spelling of the commits",
          "type": "object",
          "properties": {
            "only_head": {
              "title": "pull request checks commits messages only head",
              "default": true,
              "type": "boolean"
            }
          }
        },
        { "type": "boolean" }
      ]
    },
    "pr_checks_pull_request_spell": {
      "title": "pull request checks pull request spelling",
      "oneOf": [
        {
          "title": "pull request checks pull request spelling configuration",
          "description": "Configuration used to check the spelling of the title and body of the pull request",
          "type": "object",
          "properties": {
            "only_head": {
              "title": "pull request checks only head",
              "default": true,
              "type": "boolean"
            }
          }
        },
        { "type": "boolean" }
      ]
    },
    "pr_checks_pull_request_labels": {
      "title": "pull request checks request labels",
      "description": "According the create changelog configuration",
      "type": "boolean"
    },
    "pr_checks_add_issue_link": {
      "title": "pull request checks add issue link",
      "type": "boolean"
    },
    "publish_docker": {
      "title": "Publish Docker",
      "description": "The configuration used to publish on Docker",
      "oneOf": [
        {
          "title": "Publish Docker config",
          "description": "The configuration used to publish on Docker",
          "type": "object",
          "properties": {
            "latest": {
              "description": "Publish the latest version on tag latest",
              "title": "Publish Docker latest",
              "default": true,
              "type": "boolean"
            },
            "images": {
              "description": "List of images to be published",
              "type": "array",
              "items": {
                "title": "Publish Docker image",
                "type": "object",
                "properties": {
                  "group": {
                    "description": "The image is in the group, should be used with the --group option of c2cciutils-publish script",
                    "title": "Publish Docker image group",
                    "default": "default",
                    "type": "string"
                  },
                  "name": {
                    "description": "The image name",
                    "type": "string"
                  },
                  "tags": {
                    "description": "The tag name, will be formatted with the version=<the version>, the image with version=latest should be present when we call the c2cciutils-publish script",
                    "title": "publish docker image tags",
                    "type": "array",
                    "default": ["{version}"],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "repository": {
              "title": "Docker repository",
              "description": "The repository where we should publish the images",
              "default": {
                "github": {
                  "server": "ghcr.io",
                  "versions": ["version_tag", "version_branch", "rebuild"]
                },
                "dockerhub": {}
              },
              "type": "object",
              "additionalProperties": {
                "title": "Publish Docker repository",
                "type": "object",
                "properties": {
                  "server": {
                    "description": "The server URL",
                    "type": "string"
                  },
                  "versions": {
                    "description": "The kind or version that should be published, tag, branch or value of the --version argument of the c2cciutils-publish script",
                    "title": "Publish Docker repository versions",
                    "type": "array",
                    "default": ["version_tag", "version_branch", "rebuild", "feature_branch"],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "dispatch": {
              "description": "Send a dispatch event to an other repository",
              "default": {},
              "oneOf": [
                {
                  "type": "object",
                  "title": "dispatch config",
                  "description": "Send a dispatch event to an other repository",
                  "properties": {
                    "repository": {
                      "title": "Docker dispatch repository",
                      "description": "The repository name to be triggered",
                      "default": "camptocamp/argocd-gs-gmf-apps",
                      "type": "string"
                    },
                    "event-type": {
                      "title": "Docker dispatch event type",
                      "description": "The event type to be triggered",
                      "default": "image-update",
                      "type": "string"
                    }
                  }
                },
                { "const": false }
              ]
            },
            "snyk": {
              "description": "Checks the published images with Snyk",
              "type": "object",
              "properties": {
                "monitor_args": {
                  "description": "The arguments to pass to the Snyk container monitor command",
                  "title": "Publish docker snyk monitor args",
                  "default": ["--app-vulns"],
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    { "const": false }
                  ]
                },
                "test_args": {
                  "description": "The arguments to pass to the Snyk container test command",
                  "title": "Publish docker snyk test args",
                  "default": ["--app-vulns", "--severity-threshold=critical"],
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    { "const": false }
                  ]
                }
              }
            }
          }
        },
        { "const": false }
      ]
    },
    "publish_google_calendar": {
      "title": "Publish Google calendar",
      "description": "The configuration to publish on Google Calendar",
      "default": {},
      "oneOf": [
        {
          "title": "Publish Google calendar config",
          "description": "The configuration to publish on Google Calendar",
          "type": "object",
          "properties": {
            "on": {
              "title": "Publish Google calendar on",
              "default": ["version_branch", "version_tag", "rebuild"],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        { "const": false }
      ]
    },
    "publish_pypi": {
      "title": "publish pypi",
      "description": "Configuration to publish on pypi",
      "default": {},
      "oneOf": [
        {
          "title": "publish pypi config",
          "description": "Configuration to publish on pypi",
          "type": "object",
          "properties": {
            "packages": {
              "description": "The configuration of packages that will be published",
              "type": "array",
              "items": {
                "title": "publish pypi package",
                "description": "The configuration of package that will be published",
                "type": "object",
                "properties": {
                  "group": {
                    "description": "The image is in the group, should be used with the --group option of c2cciutils-publish script",
                    "title": "Publish pip package group",
                    "default": "default",
                    "type": "string"
                  },
                  "path": {
                    "description": "The path of the pypi package",
                    "type": "string"
                  },
                  "build_command": {
                    "description": "The command used to do the build",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "versions": {
              "description": "The kind or version that should be published, tag, branch or value of the --version argument of the c2cciutils-publish script",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        {
          "const": false
        }
      ]
    },
    "publish_helm": {
      "title": "publish helm",
      "description": "Configuration to publish Helm charts on GitHub release",
      "oneOf": [
        {
          "title": "publish helm config",
          "description": "Configuration to publish on Helm charts on GitHub release",
          "type": "object",
          "properties": {
            "folders": {
              "description": "The folders that will be published",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "versions": {
              "description": "The kind or version that should be published, tag, branch or value of the --version argument of the c2cciutils-publish script",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        {
          "const": false
        }
      ]
    },
    "print_versions": {
      "title": "Print versions",
      "description": "The print versions configuration",
      "type": "object",
      "properties": {
        "versions": {
          "title": "Print versions versions",
          "type": "array",
          "default": [
            { "name": "c2cciutils", "cmd": ["c2cciutils", "--version"] },
            { "name": "python", "cmd": ["python3", "--version"] },
            { "name": "pip", "cmd": ["python3", "-m", "pip", "--version"] },
            { "name": "twine", "cmd": ["twine", "--version"] },
            { "name": "node", "prefix": "node ", "cmd": ["node", "--version"] },
            { "name": "npm", "prefix": "npm ", "cmd": ["npm", "--version"] },
            { "name": "make", "cmd": ["make", "--version"], "prefix": "make " },
            { "name": "docker", "cmd": ["docker", "--version"] },
            { "name": "docker-compose", "cmd": ["docker-compose", "--version"] },
            { "name": "java", "cmd": ["java", "-version"] },
            { "name": "kubectl", "cmd": ["kubectl", "version"] },
            { "name": "helm", "cmd": ["helm", "version"] }
          ],
          "items": {
            "type": "object",
            "properties": {
              "cmd": {
                "description": "The command that should be used",
                "type": "array",
                "items": { "type": "string" }
              },
              "name": {
                "description": "The name",
                "type": "string"
              },
              "prefix": {
                "description": "Prefix added when we print the version",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "version_transform": {
      "title": "Version transform",
      "description": "A version transformer definition",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "from": {
            "description": "The from regular expression",
            "type": "string"
          },
          "to": {
            "description": "The expand regular expression: https://docs.python.org/3/library/re.html#re.Match.expand",
            "type": "string"
          }
        }
      }
    }
  },
  "properties": {
    "print_versions": { "$ref": "#/definitions/print_versions" },
    "codespell": { "$ref": "#/definitions/codespell" },
    "audit": {
      "title": "Audit",
      "description": "The audit configuration",
      "type": "object",
      "default": {
        "snyk": true,
        "outdated_versions": true
      },
      "properties": {
        "outdated_versions": { "$ref": "#/definitions/audit_outdated_versions" },
        "snyk": { "$ref": "#/definitions/audit_snyk" }
      }
    },
    "pr-checks": {
      "title": "Pull request checks",
      "description": "The PR check configuration",
      "type": "object",
      "default": {
        "commits_messages": true,
        "commits_spell": true,
        "pull_request_spell": true,
        "pull_request_labels": true,
        "add_issue_link": true
      },
      "properties": {
        "commits_messages": { "$ref": "#/definitions/pr_checks_commits_messages" },
        "commits_spell": { "$ref": "#/definitions/pr_checks_commits_spell" },
        "pull_request_spell": { "$ref": "#/definitions/pr_checks_pull_request_spell" },
        "pull_request_labels": { "$ref": "#/definitions/pr_checks_pull_request_labels" },
        "add_issue_link": { "$ref": "#/definitions/pr_checks_add_issue_link" }
      }
    },
    "publish": {
      "title": "Publish",
      "description": "The publishing configurations",
      "default": {
        "pypi": { "versions": ["version_tag"], "packages": "<auto-detected>" },
        "docker": {
          "images": "<auto-detected>"
        },
        "helm": {
          "versions": ["version_tag"],
          "folders": "<auto-detected>"
        }
      },
      "type": "object",
      "properties": {
        "docker": { "$ref": "#/definitions/publish_docker" },
        "pypi": { "$ref": "#/definitions/publish_pypi" },
        "helm": { "$ref": "#/definitions/publish_helm" },
        "google_calendar": { "$ref": "#/definitions/publish_google_calendar" }
      }
    },
    "version": {
      "title": "Version",
      "description": "The version configurations",
      "type": "object",
      "properties": {
        "branch_to_version_re": { "$ref": "#/definitions/version_transform" },
        "tag_to_version_re": { "$ref": "#/definitions/version_transform" }
      }
    },
    "k8s": {
      "title": "K8s configuration",
      "default": {},
      "type": "object",
      "properties": {
        "k3d": {
          "title": "K3d configuration",
          "default": {},
          "type": "object",
          "properties": {
            "install-commands": {
              "title": "K3D install commands",
              "default": [["k3d", "cluster", "create", "test-cluster", "--no-lb", "--no-rollback"]],
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "db": {
          "title": "DB configuration",
          "description": "Database configuration",
          "default": {},
          "type": "object",
          "properties": {
            "chart-options": {
              "title": "K8S DB chart options",
              "default": {
                "persistence.enabled": "false",
                "tls.enabled": "true",
                "tls.autoGenerated": "true",
                "auth.postgresPassword": "mySuperTestingPassword",
                "volumePermissions.enabled": "true"
              },
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "dpkg": {
      "title": "dpkg",
      "description": "The configuration use t manage the dpkg packages",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "packages_mapping": {
          "title": "dpkg packages mapping",
          "description": "The mapping of source package found in the image to package present in repology.org",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ignored_packages": {
          "title": "dpkg ignored packages",
          "description": "The list of packages that should be ignored",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
