name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
    paths-ignore:
      - 'example-project/**'
  pull_request:

permissions:
  actions: write
  contents: write

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - name: Event
        run: echo "$GITHUB_EVENT" | python3 -m json.tool
        env:
          GITHUB_EVENT: ${{ toJson(github) }}

      - run: pip install pyOpenSSL --upgrade
      - run: sudo apt-get remove python3-distro-info python3-debian
      - run: pip freeze

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
          patterns: pypi docker
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: cd c2cciutils; npm install
      - run: python3 -m pip install --user --requirement=requirements.txt
      - run: poetry build
      - run: python3 -m pip install --user --force-reinstall dist/*.whl 'ruamel.yaml<0.18.0'
      - run: rm -rf dist build

      - name: Checks
        run: c2cciutils-checks

      - name: Build
        run: make build
      - name: Check
        run: make checks
      - name: Build example
        run: (cd example-project/; GITHUB_REPOSITORY=camptocamp/project make)

      - name: Prepare publish
        run: |
          sed --in-place 's/^# format/format/g' pyproject.toml
          cat pyproject.toml
        if: |
          env.HAS_SECRETS == 'HAS_SECRETS'
          && github.event_name == 'push'
          && github.ref_type != 'tag'
      - name: Publish
        run: c2cciutils-publish
        if: |
          env.HAS_SECRETS == 'HAS_SECRETS'
          && github.event_name == 'push'
          && ( github.ref_type == 'tag' || github.ref_name == 'master' )

      - name: Trigger changelog workflow
        uses: actions/github-script@v7
        with:
          script: |-
            if (process.env.GITHUB_REF_TYPE == 'tag') {
                console.log('Trigger changelog');
                await github.rest.repos.createDispatchEvent({
                    owner: 'camptocamp',
                    repo: 'helm-mutualize',
                    event_type: 'changelog',
                });
            }
  k8s:
    name: Kubernetes
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - run: pip install pyOpenSSL --upgrade

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: cd c2cciutils; npm install
      - run: python3 -m pip install --user --requirement=requirements.txt
      - run: poetry build
      - run: python3 -m pip install --user --force-reinstall dist/*.whl 'ruamel.yaml<0.18.0'
      - run: rm -rf dist build

      - name: Install
        run: c2cciutils-k8s-install
      - name: Checks
        run: c2cciutils-checks

      - name: Create DB
        run: c2cciutils-k8s-db --script=test/init.sql

      - run: kubectl run test-pod --restart=Never --namespace=default --image=busybox --command -- tail -f /dev/null

      - name: Wait
        run: c2cciutils-k8s-wait
      - name: Logs
        run: c2cciutils-k8s-logs
        if: always()

      - name: Clean the database
        run: c2cciutils-k8s-db --cleanup
        if: always()
